

drop table if exists research_report_variance;
create table research_report_variance (
id int generated by default as identity primary key,
estimate_id int,
dbt_entity_id uuid,
external_id bigint,
stock_code text,
forecast_release_date date,
target_price numeric(25,5),
adj_target_price numeric(25,5),
ex_target_price numeric(25,5),
stock_price numeric(25,5),
adj_stock_price numeric(25,5),
ex_stock_price numeric(25,5),
exceed_30 bool
);

select * from research_report_variance;

insert into research_report_variance (estimate_id, dbt_entity_id, external_id, forecast_release_date, target_price)
select a.estimate_id, a.dbt_entity_id, a.external_id, a.forecast_release_date, b.numeric_value 
from dibots_v2.ee_earning_estimates_hdr_view a, dibots_v2.ee_data_item_value b
where a.estimate_id = b.estimate_id and b.data_item_perm_id = 29 and a.iso_currency_code = 'MYR'


update research_report_variance a
set
stock_code = b.stock_code
from dibots_v2.exchange_stock_profile b
where a.dbt_entity_id = b.stock_identifier;

select count(*) from research_report_variance where stock_code is null

select * from dibots_v2.company_profile where dbt_entity_id = 'c0a22f14-ec80-4b68-a4fc-b83ec94f6e45'


--=============================
-- get the stock_price on the forecast release date
--=============================

select * from research_report_variance

update research_report_variance a
set
adj_target_price = a.target_price * b.factor,
stock_price = b.closing_price,
adj_stock_price = b.adj_closing
from dibots_v2.exchange_daily_transaction b
where a.stock_code = b.stock_code and a.forecast_release_date = b.transaction_date

update research_report_variance a
set
ex_target_price = a.adj_target_price / b.factor,
ex_stock_price = a.adj_stock_price / b.factor
from dibots_v2.exchange_daily_transaction b
where a.stock_code = b.stock_code and b.transaction_date = (select max(transaction_date) from dibots_v2.exchange_daily_transaction);

select * from research_report_variance where adj_target_price is not null

-- if tp > stock price * 1.3
select * from research_report_variance where adj_target_price > adj_stock_price * 1.3

update research_report_variance a
set
exceed_30 = true
where adj_target_price > adj_stock_price * 1.3

select count(*) from research_report_variance where exceed_30 = true;

update research_report_variance a
set
exceed_30 = true
where adj_target_price < adj_stock_price * 0.7