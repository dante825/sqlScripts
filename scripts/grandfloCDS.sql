--========================
-- GRANDFLO CDS ACCOUNTS
--========================

--drop table staging.grandflo_holders_raw;
create table staging.grandflo_holders_raw (
id int generated by default as identity primary key,
mem_no varchar(20),
investor_id varchar(20),
broker_code varchar(10),
broker_branch varchar(10),
broker_name varchar(100),
cds_no varchar(20),
person_name varchar(200),
address1 varchar(200),
address2 varchar(200),
town varchar(200),
postcode int,
state_code varchar(5),
country varchar(5),
nationality varchar(5),
race_code varchar(5),
investor_code varchar(5),
telephone varchar(100),
stock_code varchar(20),
serial_no int,
shares bigint,
status_code varchar(10),
bo varchar(5),
qualifier varchar(200),
duplicate varchar(10),
rejection varchar(10),
old_id varchar(100),
director int,
residence int,
treasury int,
moratorium int,
rom int,
ashare int,
snapshot_date date,
person_mk varchar(20),
roc_no varchar(20),
shareholder varchar(100),
person_dbt_id uuid,
person_dbt_count int,
comp_dbt_id uuid,
race_desc varchar(20),
investor_desc varchar(20),
margin_acc bool,
rakuten_acc bool
);

select * from staging.grandflo_holders_raw;

alter table staging.grandflo_holders_raw add column margin_acc bool, add column rakuten_acc bool;

-- the date from the file
update staging.grandflo_holders_raw
set
snapshot_date = '2020-06-30';

--=======================
-- cleansing empty value
--=======================

select * from staging.grandflo_holders_raw where btrim(bo) = ''

update staging.grandflo_holders_raw
set
address2 = null
where btrim(address2) = ''

update staging.grandflo_holders_raw
set
state_code = null
where btrim(state_code) = '';

update staging.grandflo_holders_raw
set
telephone = null
where btrim(telephone) = '';

update staging.grandflo_holders_raw
set
status_code = null
where btrim(status_code) = '';

update staging.grandflo_holders_raw
set
bo = null
where btrim(bo) = '';

update staging.grandflo_holders_raw
set
qualifier = null
where btrim(qualifier) = '';

update staging.grandflo_holders_raw
set
duplicate= null
where btrim(duplicate) = '';

update staging.grandflo_holders_raw
set
rejection = null
where btrim(rejection) = '';

update staging.grandflo_holders_raw
set
old_id = null
where btrim(old_id) = '';

--============
-- race desc
--============
-- B -> BUMIPUTERA
-- C -> CHINESE
-- I -> INDIAN
-- O -> OTHERS
-- F -> FOREIGNER
-- J -> CONTROLLED BY MALAYSIAN (MALAY)
-- K -> CONTROLELD BY MALAYSIAN (NON-MALAY)
-- L -> CONTROLLED BY NON-MALAYSIAN

update staging.grandflo_holders_raw 
set
race_desc = case when race_code = 'B' then 'BUMIPUTERA' 
when race_code = 'C' then 'CHINESE' 
when race_code = 'I' then 'INDIAN' 
when race_code = 'O' then 'OTHERS' 
when race_code = 'F' then 'FOREIGNER'
when race_code = 'J' then 'CTRL BY MALAY' 
when race_code = 'K' then 'CTRL BY NON-MALAY'
when race_code = 'L' then 'CTRL NON-MALAYSIAN' end

select * from staging.grandflo_holders_raw where race_desc is null

--===============
-- investor_type
--===============
-- I -> RETAIL
-- C8 -> NOMINEES
-- others code -> INSTITUTIONAL

select * from staging.grandflo_holders_raw where investor_desc is null

update staging.grandflo_holders_raw
set
investor_desc = CASE WHEN investor_code = 'I' then 'RETAIL'
WHEN investor_code = 'C8' then 'NOMINEES'
ELSE 'INSTITUTIONAL'
END;

-- special handling for C8 (NOMINEES) if person name is corp then INST else if person name is person then RETAIL
select * from staging.grandflo_holders_raw where investor_code = 'C8' and old_id is null

update staging.grandflo_holders_raw
set
investor_desc = 'INSTITUTIONAL'
where investor_code = 'C8';

--============================
-- person_mk from investor_id
--============================

select * from staging.grandflo_holders_raw where old_id is not null

select * from staging.grandflo_holders_raw where length(investor_id) < 14

update staging.grandflo_holders_raw
set
person_mk = regexp_replace(investor_id, '-', '', 'g')
where length(investor_id) = 14;

select * from staging.grandflo_holders_raw where person_mk is not null

select a.person_mk, b.identifier, b.dbt_entity_id from staging.grandflo_holders_raw a, dibots_v2.entity_identifier b
where btrim(a.person_mk) = b.identifier and b.identifier_type = 'MK' and b.deleted = false and a.person_dbt_id is null

update staging.grandflo_holders_raw a
set
person_dbt_id = b.dbt_entity_id
from dibots_v2.entity_identifier b
where a.person_mk = b.identifier and b.identifier_type = 'MK' and b.deleted = false;

select * from staging.grandflo_holders_raw where person_mk is not null and person_dbt_id is null

-- check if those less than 14 char if they are old ic number
select * from staging.grandflo_holders_raw where length(investor_id) < 14

select * from staging.grandflo_holders_raw where old_id is not null and length(investor_id) < 14

update staging.grandflo_holders_raw
set
old_id = investor_id
where id in (874,1121,1221,158,55,143,184,311,447,461,502,547,579,793,1004,1012,1035,1049,1106,1131,1143,107,160,379,307,511,870,673,755,770,862,888,1215)

-- no match
select * from staging.grandflo_holders_raw a
join dibots_v2.entity_identifier b 
on a.old_id = b.identifier
where a.old_id is not null and a.person_dbt_id is null and b.deleted = false and b.identifier_type in ('B', 'S', 'MK', 'NAT_IDEN')

--=========================
-- roc_no from investor_id
--=========================

select * from staging.grandflo_holders_raw where length(investor_id) < 14 and old_id is null

update staging.grandflo_holders_raw
set
roc_no = btrim(investor_id)
where length(investor_id) < 14 and old_id is null;

select * from staging.grandflo_holders_raw where roc_no is not null;

-- no match
select * from staging.grandflo_holders_raw a, dibots_v2.entity_identifier b
where btrim(a.roc_no) = b.identifier and b.identifier_type = 'REGIST' and b.deleted = false

--=============================
-- shareholder from qualifier
--=============================

select btrim(split_part(split_part(qualifier, 'FOR', 2), '(', 1)) from staging.grandflo_holders_raw where btrim(qualifier) <> '' and btrim(qualifier) like '%FOR%'

update staging.grandflo_holders_raw 
set
shareholder = btrim(split_part(split_part(qualifier, 'FOR', 2), '(', 1))
where btrim(qualifier) <> '' and btrim(qualifier) like '%FOR%';

select * from staging.grandflo_holders_raw where shareholder is not null and person_dbt_id is null

--=========================
-- dbt_id from shareholder
--=========================

select a.shareholder,b.dbt_entity_id, count(*) from staging.grandflo_holders_raw a
join dibots_v2.person_profile b
on upper(a.shareholder) = upper(b.fullname)
group by a.shareholder, b.dbt_entity_id

update staging.grandflo_holders_raw c
set
person_dbt_id = d.dbt_entity_id,
person_dbt_count = d.count
from 
(select a.shareholder,b.dbt_entity_id, count(*) from staging.grandflo_holders_raw a
join dibots_v2.person_profile b
on upper(a.shareholder) = upper(b.fullname)
group by a.shareholder, b.dbt_entity_id) d
where c.shareholder = d.shareholder and d.dbt_entity_id is not null;

select * from staging.grandflo_holders_raw where person_dbt_id is not null

--=================================
-- qualifier

select * from staging.grandflo_holders_raw where qualifier is not null

-- if qualifier starts with PLEDGED SECURITIES -> flag as margin_acc 
-- if qualifier starts with RAKUTEN -> flag as rakuten and RETAIL
-- if qualifier starts with EXEMPT -> shareholder become EPF, linked to EPF dbt_entity_id

select * from staging.grandflo_holders_raw where qualifier like 'PLEDGED%'

update staging.grandflo_holders_raw 
set
margin_acc = true
where qualifier like 'PLEDGED%';

select * from staging.grandflo_holders_raw where qualifier like 'RAKUTEN%'

update staging.grandflo_holders_raw
set
rakuten_acc = true,
investor_desc = 'RETAIL'
where qualifier like 'RAKUTEN%'

select * from staging.grandflo_holders_raw where qualifier like 'EXEMPT%'

select * from dibots_v2.company_profile where glic_flag is true

update staging.grandflo_holders_raw
set
shareholder = 'EPF',
investor_desc = 'INSTITUTIONAL',
comp_dbt_id = '8dcaf88b-7fc1-45b9-8915-2fc06da869e3'
where id = 584;

select * from staging.grandflo_holders_raw where qualifier not like 'RAKUTEN%' and qualifier not like 'EXEMPT%' and qualifier not like 'PLEDGED%' and qualifier not like 'SHARE%' AND shareholder is null

update staging.grandflo_holders_raw
set
shareholder = qualifier 
where qualifier not like 'RAKUTEN%' and qualifier not like 'EXEMPT%' and qualifier not like 'PLEDGED%' and qualifier not like 'SHARE%' AND shareholder is null;

update staging.grandflo_holders_raw
set
shareholder = 'TAN YONG YIAP'
where id = 342;

update staging.grandflo_holders_raw
set
shareholder = 'WONG YEW LEONG'
where id = 802;

update staging.grandflo_holders_raw
set
shareholder = 'TEOH KEE BIN'
where id = 817;


--============================================================================
-- replicate another set of data into the table with snapshot date 2021-06-30
--============================================================================

select count(*) from staging.grandflo_holders_raw

select * from staging.grandflo_holders_raw

--insert into staging.grandflo_holders_raw (mem_no, investor_id, broker_code, broker_branch, broker_name, cds_no, person_name, address1, address2, town, postcode, state_code, country, race_code, investor_code, 
telephone, stock_code, serial_no, shares, status_code, bo, qualifier, duplicate, rejection, old_id, director, residence, treasury, moratorium, rom, ashare, snapshot_date, person_mk, roc_no, shareholder, 
person_dbt_id, person_dbt_count, comp_dbt_id, race_desc, investor_desc, margin_acc, rakuten_acc)
select
mem_no, investor_id, broker_code, broker_branch, broker_name, cds_no, person_name, address1, address2, town, postcode, state_code, country, race_code, investor_code, 
telephone, stock_code, serial_no, shares, status_code, bo, qualifier, duplicate, rejection, old_id, director, residence, treasury, moratorium, rom, ashare, '2021-06-30', person_mk, roc_no, shareholder, 
person_dbt_id, person_dbt_count, comp_dbt_id, race_desc, investor_desc, margin_acc, rakuten_acc
from staging.grandflo_holders_raw
where snapshot_date = '2020-06-30'


-- VACUUM
vacuum (analyze) staging.grandflo_holders_raw;